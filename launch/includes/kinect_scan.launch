<launch>
  <arg name="use_kinect_v1" default="true"/>

  <group if="$(arg use_kinect_v1)">    
    <node name="kinect1_broadcaster" pkg="tf" type="static_transform_publisher" args="0.15 0 0.3 0 0 0 1 base_link camera_link 100" />
    <node name="pointcloud_to_laserscan_node" pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" >
      <param name="target_frame" value="camera_link" />
      <param name="min_height" value="-0.10"/> 
      <param name="angle_min" value="-pi/2"/>
      <param name="angle_max" value="pi/2"/>  
      <remap from="cloud_in" to="/camera/depth_registered/points" />
      <remap from="scan" to="scan" />
    </node>
    <include file="$(find openni_launch)/launch/openni.launch"/>
  </group>

  <group unless="$(arg use_kinect_v1)">
    <node name="kinect2_broadcaster1" pkg="tf" type="static_transform_publisher" args="0.15 0 0.3 0 0 0 1 base_link camera_link 100" />
    <node name="kinect2_broadcaster2" pkg="tf" type="static_transform_publisher" args="0 0 0 -0.5 0.5 -0.5 0.5 camera_link kinect2_ir_optical_frame 100" />
    <node name="pointcloud_to_laserscan_node" pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" >
      <param name="target_frame" value="camera_link" />
      <param name="min_height" value="0.0"/> 
      <param name="angle_min" value="-pi/2"/>
      <param name="angle_max" value="pi/2"/>
      <remap from="cloud_in" to="/kinect2/sd/points" />
      <remap from="scan" to="scan" />
    </node>
    <include file="$(find kinect2_bridge)/launch/kinect2_bridge.launch"/>
  </group>

</launch>
